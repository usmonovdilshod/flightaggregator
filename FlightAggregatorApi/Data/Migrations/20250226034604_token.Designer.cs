// <auto-generated />
using System;
using FlightAggregatorApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlightAggregatorApi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250226034604_token")]
    partial class token
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FlightAggregatorApi.Entity.Credential", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("access_token");

                    b.Property<long?>("ExpiresInSeconds")
                        .HasColumnType("bigint")
                        .HasColumnName("expires_in_seconds");

                    b.Property<string>("IdToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("id_token");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issued_utc");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("refresh_token");

                    b.HasKey("UserId")
                        .HasName("credential_pkey");

                    b.ToTable("credentials", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
