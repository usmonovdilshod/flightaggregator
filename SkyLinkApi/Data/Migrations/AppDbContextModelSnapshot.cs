// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkyLinkApi.Data;

#nullable disable

namespace SkyLinkApi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkyLinkApi.Entity.BookEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("FlightId")
                        .HasColumnType("bigint")
                        .HasColumnName("flight_id");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("book_pkey");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_books_user_id");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("SkyLinkApi.Entity.FlightEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("airline");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("arrival_date");

                    b.Property<string>("DepartureAirportCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("departure_airport_code");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("departure_date");

                    b.Property<string>("DestinationAirportCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("destination_airport_code");

                    b.Property<int>("Layovers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("layovers");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("flight_pkey");

                    b.HasIndex("Airline");

                    b.HasIndex("DepartureAirportCode");

                    b.HasIndex("DestinationAirportCode");

                    b.ToTable("flights", (string)null);
                });

            modelBuilder.Entity("SkyLinkApi.Entity.BookEntity", b =>
                {
                    b.HasOne("SkyLinkApi.Entity.FlightEntity", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });
#pragma warning restore 612, 618
        }
    }
}
